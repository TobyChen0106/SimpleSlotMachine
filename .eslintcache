[{"C:\\Users\\yicha\\SimpleSlotMachine\\src\\index.js":"1","C:\\Users\\yicha\\SimpleSlotMachine\\src\\App.js":"2","C:\\Users\\yicha\\SimpleSlotMachine\\src\\reportWebVitals.js":"3","C:\\Users\\yicha\\SimpleSlotMachine\\src\\containers\\Game.js":"4","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\SlotMachine.js":"5","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\SlotMachineBack.js":"6","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\Rollers.js":"7","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\Background.js":"8","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\Handle.js":"9","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\SingleSlot.js":"10"},{"size":517,"mtime":1611038300149,"results":"11","hashOfConfig":"12"},{"size":178,"mtime":1611038300139,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1611038300149,"results":"14","hashOfConfig":"12"},{"size":3530,"mtime":1611299116390,"results":"15","hashOfConfig":"12"},{"size":836,"mtime":1611298442843,"results":"16","hashOfConfig":"12"},{"size":988,"mtime":1611298543036,"results":"17","hashOfConfig":"12"},{"size":1404,"mtime":1611298724722,"results":"18","hashOfConfig":"12"},{"size":1060,"mtime":1611298859812,"results":"19","hashOfConfig":"12"},{"size":2172,"mtime":1611298499477,"results":"20","hashOfConfig":"12"},{"size":1717,"mtime":1611298612595,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1yo21ip",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"C:\\Users\\yicha\\SimpleSlotMachine\\src\\index.js",[],["48","49"],"C:\\Users\\yicha\\SimpleSlotMachine\\src\\App.js",[],"C:\\Users\\yicha\\SimpleSlotMachine\\src\\reportWebVitals.js",[],"C:\\Users\\yicha\\SimpleSlotMachine\\src\\containers\\Game.js",["50","51"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SlotMachine from '../components/SlotMachine'\r\nimport SlotMachineBack from '../components/SlotMachineBack'\r\nimport Background from '../components/Background'\r\nimport Rollers from '../components/Rollers'\r\nimport Handle from '../components/Handle'\r\nimport './firework.css'\r\n\r\nconst useStyles = makeStyles((\r\n    {\r\n        gameRoot: {\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"#227373\",\r\n            position: \"relative\",\r\n            overflow: \"hidden\",\r\n        },\r\n        shadow: {\r\n            background: \"rgb(0,0,0)\",\r\n            background: \"radial-gradient(circle, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.45) 50%, rgba(0,0,0,0.1) 65%)\",\r\n            boxShadow: \"0 0 2.5vh 5vh rgba(0,0,0,0.1)\",\r\n            width: \"140vw\",\r\n            height: \"140vw\",\r\n            borderRadius: \"50%\",\r\n            position: \"absolute\",\r\n            left: \"-20vw\",\r\n            top: \"calc(52vh + -70vw)\",\r\n        },\r\n        turnButton: {\r\n            width: \"10vh\",\r\n            height: \"10vh\",\r\n            borderRadius: \"50%\",\r\n            position: \"absolute\",\r\n            left: \"calc(50vw-5vh)\",\r\n            top: \"80vh\",\r\n        }\r\n    })\r\n);\r\n\r\nfunction Game() {\r\n    const classes = useStyles({ test: \"tset\" });\r\n    const [turnState, setTurnState] = useState(true);\r\n    const [preTurnState, setPreTurnState] = useState(false);\r\n    const [target, setTarget] = useState([0, 0, 0]);\r\n\r\n    const [gameStatus, setGameStatus] = useState('init');\r\n    useEffect(() => {\r\n        if (gameStatus === 'done') {\r\n            setTimeout(() => {\r\n                setGameStatus('ready');\r\n            }, 4500);\r\n        }\r\n    }, [gameStatus]);\r\n\r\n    useEffect(() => {\r\n        setTarget([6, 6, 6]);\r\n        setGameStatus('init');\r\n        setTimeout(() => {\r\n            setGameStatus('ready');\r\n        }, 5000);\r\n    }, []);\r\n\r\n    const handlePress = () => {\r\n        if (gameStatus === 'ready') {\r\n            // console.log(\"pressed\");\r\n            setGameStatus('pressed');\r\n            setPreTurnState(true);\r\n        }\r\n    };\r\n\r\n    const handleRelease = () => {\r\n        if (gameStatus === 'pressed') {\r\n            // console.log('released');\r\n            setGameStatus('released');\r\n            const result = [Math.floor(Math.random() * (6 - 1)) + 2, Math.floor(Math.random() * (6 - 1)) + 2, Math.floor(Math.random() * (6 - 1)) + 2];\r\n            setTarget(result);\r\n            setPreTurnState(false);\r\n            setTimeout(() => {\r\n                setGameStatus('done');\r\n                handleResult(result);\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    const handleResult = (result) => {\r\n        console.log(\"result:\", result);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.gameRoot}>\r\n            <Background zIndex={0} fill=\"#D93B3B\" />\r\n            <div className={classes.shadow} style={{ zIndex: 1 }} />\r\n            <SlotMachineBack zIndex={10} />\r\n            <Rollers zIndex={50} target={target} turn={turnState} preturn={preTurnState} />\r\n            <Handle zIndex={80} handlePress={handlePress} handleRelease={handleRelease} />\r\n            <SlotMachine zIndex={100} />\r\n\r\n            <div className=\"pyro\" style={gameStatus === 'done' ? null : { display: 'none' }}>\r\n                <div className=\"before\"></div>\r\n                <div className=\"after\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\SlotMachine.js",[],"C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\SlotMachineBack.js",["52","53"],"import { ReactComponent as MachineBackImage } from '../images/machine back.svg';\r\nimport MachineBackImagePng from '../images/roller base2.svg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((\r\n    {\r\n        machineBackHolder: {\r\n            position: \"relative\",\r\n        },\r\n        machineBackImage: {\r\n            width: \"100vw\",\r\n            height: \"100vw\",\r\n            position: \"absolute\",\r\n            left: \"0vw\",\r\n            top: \"calc(50vh + -50vw )\",\r\n            userDrag: \"none\",\r\n            userSelect: \"none\",\r\n        }\r\n    })\r\n);\r\n\r\nfunction SlotMachine(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.machineBackHolder} style={{ zIndex: props.zIndex }}>\r\n            {/* <MachineBackImage className={classes.machineBackImage} /> */}\r\n            <img src={MachineBackImagePng} className={classes.machineBackImage}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SlotMachine;\r\n","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\Rollers.js",["54","55"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slot from 'react-slot-machine';\r\nimport SingleSlot from './SingleSlot'\r\n\r\nconst useStyles = makeStyles((\r\n    {\r\n        rollersHolder: {\r\n            display: \"flex\",\r\n            position: \"absolute\",\r\n            height: \"50vw\",\r\n            width: \"60vw\",\r\n            top: \"calc(50vh + -25vw + -7vw)\",\r\n            left: \"11vw\",\r\n        },\r\n    })\r\n);\r\n\r\nfunction Rollers(props) {\r\n    const classes = useStyles();\r\n    const preturn = props.preturn;\r\n\r\n    return (\r\n        <div className={classes.rollersHolder} style={{ zIndex: props.zIndex }}>\r\n            <SingleSlot\r\n                duration={preturn ? 8000 : 1500}\r\n                times={preturn ? 30 : 5}\r\n                turnState={props.turn}\r\n                target={preturn ? 1 : props.target[0]}\r\n            />\r\n            <SingleSlot\r\n                duration={preturn ? 8000 : 3500}\r\n                times={preturn ? 30 : 10}\r\n                turnState={props.turn}\r\n                target={preturn ? 1 : props.target[1]}\r\n            />\r\n            <SingleSlot\r\n                duration={preturn ? 8000 : 5000}\r\n                times={preturn ? 30 : 15}\r\n                turnState={props.turn}\r\n                target={preturn ? 1 : props.target[2]}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rollers;\r\n","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\Background.js",[],"C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\Handle.js",["56","57","58"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport MachineBackImagePng from '../images/handle2.svg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((\r\n    {\r\n        machineBackHolder: {\r\n            position: \"relative\",\r\n        },\r\n        machineBackImage: {\r\n            width: \"15vw\",\r\n            height: \"30vw\",\r\n            position: \"absolute\",\r\n            top: \"calc(50vh + -15vw + -15vw)\",\r\n            left: \"80vw\",\r\n            transitionDuration: \"0.3s\",\r\n            userDrag: \"none\",\r\n            userSelect: \"none\",\r\n        }\r\n    })\r\n);\r\n\r\nfunction Handle(props) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', mouseDown);\r\n        document.addEventListener('mouseup', mouseUp);\r\n        document.addEventListener('touchstart', mouseDownt);\r\n        document.addEventListener('touchend', mouseUp);\r\n    }, []);\r\n\r\n    const [handleState, setHandleState] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (handleState === true) {\r\n            props.handlePress();\r\n        } else if (handleState === false) {\r\n            props.handleRelease();\r\n        }\r\n    }, [handleState]);\r\n\r\n    const mouseDown = (e) => {\r\n        e.preventDefault();\r\n        if (e.clientX >= window.innerWidth * 0.5) {\r\n            setHandleState(true);\r\n        }\r\n    }\r\n\r\n    const mouseDownt = (e) => {\r\n        e.preventDefault();\r\n        if (e.touches[0].clientX >= window.innerWidth * 0.5) {\r\n            setHandleState(true);\r\n        }\r\n    }\r\n\r\n    const mouseUp = (e) => {\r\n        e.preventDefault();\r\n        setHandleState(false);\r\n    }\r\n\r\n    const handleStyle = handleState ? {\r\n        transform: \"rotate(90deg)\",\r\n        transformOrigin: \"bottom left\",\r\n    } : {\r\n            transform: \"rotate(0deg)\",\r\n            transformOrigin: \"bottom left\",\r\n        };\r\n\r\n    return (\r\n        <div className={classes.machineBackHolder} style={{ zIndex: props.zIndex }}>\r\n            <img src={MachineBackImagePng} className={classes.machineBackImage} style={handleStyle}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Handle;\r\n","C:\\Users\\yicha\\SimpleSlotMachine\\src\\components\\SingleSlot.js",["59"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slot from 'react-slot-machine';\r\nimport image_0 from '../images/0.png'\r\nimport image_1 from '../images/1.png'\r\nimport image_2 from '../images/2.png'\r\nimport image_3 from '../images/3.png'\r\nimport image_4 from '../images/4.png'\r\nimport image_5 from '../images/5.png'\r\nimport image_6 from '../images/6.png'\r\n\r\nconst list = [\r\n    { value: 0, image: image_0 },\r\n    { value: 1, image: image_1 },\r\n    { value: 2, image: image_2 },\r\n    { value: 3, image: image_3 },\r\n    { value: 4, image: image_4 },\r\n    { value: 5, image: image_5 },\r\n    { value: 6, image: image_6 },\r\n];\r\n\r\nconst useStyles = makeStyles((\r\n    {\r\n        rollerSlot: {\r\n            height: \"50vw\",\r\n            width: \"25vw\"\r\n        },\r\n        slotItem: {\r\n            height: \"50vw\",\r\n            width: \"25vw\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        },\r\n        slotItemImage: {\r\n            width: \"60%\",\r\n            height: \"auto\",\r\n            opacity: 0.9,\r\n            filter: \"brightness(80%)\" \r\n        }\r\n    })\r\n);\r\n\r\nfunction Rollers(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Slot\r\n            className={classes.rollerSlot}\r\n            duration={props.duration}\r\n            target={props.target}\r\n            times={props.times}\r\n        >\r\n            {list.map(({ value, image }) => (\r\n                <div key={`image-holder-${value}`} className={classes.slotItem}>\r\n                    <img src={image} className={classes.slotItemImage} />\r\n                </div>\r\n            ))}\r\n        </Slot>\r\n    );\r\n}\r\n\r\nexport default Rollers;\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":21,"column":13,"nodeType":"66","messageId":"67","endLine":21,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":43,"column":23,"nodeType":"70","messageId":"71","endLine":43,"endColumn":35},{"ruleId":"68","severity":1,"message":"72","line":1,"column":28,"nodeType":"70","messageId":"71","endLine":1,"endColumn":44},{"ruleId":"73","severity":1,"message":"74","line":27,"column":13,"nodeType":"75","endLine":27,"endColumn":81},{"ruleId":"68","severity":1,"message":"76","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"77","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":12},{"ruleId":"68","severity":1,"message":"78","line":1,"column":38,"nodeType":"70","messageId":"71","endLine":1,"endColumn":49},{"ruleId":"79","severity":1,"message":"80","line":41,"column":8,"nodeType":"81","endLine":41,"endColumn":21,"suggestions":"82"},{"ruleId":"73","severity":1,"message":"74","line":72,"column":13,"nodeType":"75","endLine":72,"endColumn":101},{"ruleId":"73","severity":1,"message":"74","line":56,"column":21,"nodeType":"75","endLine":56,"endColumn":74},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","no-unused-vars","'setTurnState' is assigned a value but never used.","Identifier","unusedVar","'MachineBackImage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Slot' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [handleState, props]",{"range":"88","text":"89"},[1213,1226],"[handleState, props]"]